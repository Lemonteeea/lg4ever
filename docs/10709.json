{"title":"08 | 加乘法则：如何计算复杂事件发生的概率？","context":"\n                    <p data-nodeid=\"10317\" class=\"\">\n                      在我们的工作和生活中少不了对概率的计算，对概率的准确计算会帮助我们做出更加合理高效的决策。\n                    </p>\n                    <p data-nodeid=\"10318\">\n                      例如，早上出门之前，你需要对是否携带雨伞进行决策。如果没有任何依据而随机决策，那么就会遇到下雨没带伞或者晴天带伞的麻烦；而如果有依据，你知道今天下雨的概率超过\n                      80%，那么你就会做出带雨伞的决策，来规避下雨带来不便的风险。\n                    </p>\n                    <p data-nodeid=\"10319\">\n                      那么问题来了，对于一个事件而言，其发生的概率该如何计算呢？这一讲我们就来解答。\n                    </p>\n                    <h3 data-nodeid=\"10320\">概率来自统计</h3>\n                    <p data-nodeid=\"10321\">\n                      还记得我们最开始接触概率时的定义吗？概率用来描述一个事件发生的可能性，它是个\n                      0 到 1 的数字。概率的定义式就是\n                      m/n，含义为假设某个现象重复执行 n 次（n\n                      较大），其中目标事件发生了 m 次，则目标事件发生的概率就是\n                      m/n。\n                    </p>\n                    <blockquote data-nodeid=\"10322\">\n                      <p data-nodeid=\"10323\">\n                        举个例子，一枚硬币重复抛 100 次，其中正面朝上 49\n                        次，反面朝上 51 次，则硬币正面朝上的概率就是 0.49。\n                      </p>\n                    </blockquote>\n                    <p data-nodeid=\"10324\">\n                      概率的定义式非常重要，如果你能灵活运用，并结合一定的代码开发，有时候可以快速解决一个复杂的数学问题。\n                    </p>\n                    <p data-nodeid=\"10325\">\n                      我们举个例子，在一个正方形内有一个内切圆，在正方形内随机选取一点，问该点也在圆内的概率是多少？<br />\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6E/D4/CgqCHl-zjyKAWZQDAABRFSgu6k0435.png\"\n                        alt=\"Lark20201117-165117.png\"\n                        data-nodeid=\"10435\"\n                      /><br />\n                      这是个数学问题，但你可以借助概率的定义式完成计算，代码如下：\n                    </p>\n                    <div class=\"course-code-area\">\n                      <div class=\"copy-btn\">\n                        <div class=\"copy-icon\"></div>\n                        复制代码\n                      </div>\n                      <pre><code data-language=\"python\"><ol><li><div class=\"code-word\"><span class=\"hljs-keyword\">import</span> random\n</div></li><li><div class=\"code-word\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">main</span>():</span>\n</div></li><li><div class=\"code-word\">\tm = <span class=\"hljs-number\">0</span>\n</div></li><li><div class=\"code-word\">\tn = <span class=\"hljs-number\">1000</span>\n</div></li><li><div class=\"code-word\">\t<span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> range(n):\n</div></li><li><div class=\"code-word\">\t\tx = random.random()\n</div></li><li><div class=\"code-word\">\t\ty = random.random()\n</div></li><li><div class=\"code-word\">\t\t<span class=\"hljs-keyword\">if</span> x*x + y*y &lt; <span class=\"hljs-number\">1</span>:\n</div></li><li><div class=\"code-word\">\t\t\tm += <span class=\"hljs-number\">1</span>\n</div></li><li><div class=\"code-word\">\t<span class=\"hljs-keyword\">print</span> <span class=\"hljs-number\">1.0</span>*m/n\n</div></li><li><div class=\"code-word\"><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">'__main__'</span>:\n</div></li><li><div class=\"code-word\">\tmain()\n</div></li></ol></code></pre>\n                    </div>\n                    <p data-nodeid=\"10327\">我们对代码进行走读：</p>\n                    <ul data-nodeid=\"10328\">\n                      <li data-nodeid=\"10329\">\n                        <p data-nodeid=\"10330\">\n                          第 4、5 行定义了 m 和 n 两个变量。其中，n 赋值为\n                          1000，意味着我们要重复执行这个动作 1000 次，m\n                          表示坐标点落入圆内的次数；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10331\">\n                        <p data-nodeid=\"10332\">\n                          接下来，就是第 6～10 行的 1000\n                          次实验的循环了。每次实验，我们随机生成一个坐标点\n                          (x,y)，其中 x 和 y 的取值范围都是 0～1 的浮点数；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10333\">\n                        <p data-nodeid=\"10334\">\n                          这样，在第 9 行中，如果点 (x,y) 与原点的距离小于\n                          1，则表示该点在圆内，m 自动加 1；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10335\">\n                        <p data-nodeid=\"10336\">最后，打印出 m 和 n 的比值。</p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"10337\">\n                      我们运行程序的结果如下：<br />\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6E/D4/CgqCHl-zj0mAcEsZAABNWAtZ0sk472.png\"\n                        alt=\"Drawing 1.png\"\n                        data-nodeid=\"10447\"\n                      />\n                    </p>\n                    <p data-nodeid=\"10338\">\n                      这个题目如果从数学的视角来计算，结果就是 P\n                      =πr<sup>2</sup>÷4r<sup>2</sup>= π÷4 =\n                      0.785，这与我们的计算结果是一样的。\n                    </p>\n                    <p data-nodeid=\"10339\">\n                      未来，如果你遇到复杂的概率计算时，不妨试着用这种统计法来求解。\n                    </p>\n                    <h3 data-nodeid=\"10340\">用加乘法则来计算复杂事件的概率</h3>\n                    <p data-nodeid=\"10341\">\n                      统计法是一种用程序思想解决数学问题的范例，但这并不意味着你不需要学习数学中概率计算的原理。原因在于，有些场景下重复试验的条件并不成立；或者是事件极其复杂，重复试验的代价太大。这就需要我们掌握一些基本的概率计算法则。\n                    </p>\n                    <p data-nodeid=\"10342\">\n                      在这一课时，我们重点介绍加法原理和乘法原理。\n                    </p>\n                    <h4 data-nodeid=\"10343\">1.加法原理</h4>\n                    <p data-nodeid=\"10344\">\n                      加法原理可以理解为，一个事件有多个可能的发生路径，那么这个事件发生的概率，就是所有路径发生的概率之和。\n                    </p>\n                    <p data-nodeid=\"10345\">\n                      例如，在掷骰子的游戏中，掷出的点数大于 4 的概率是多少？\n                    </p>\n                    <p data-nodeid=\"10346\">\n                      掷骰子的 6 个可能的点数是 6 个路径，每个路径发生的概率是\n                      1/6，其中满足条件中点数大于 4\n                      的只有最后两条路径。利用加法原理则有，点数大于 4 的概率为\n                      1/6 + 1/6 = 1/3，如下图：<br />\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6E/C9/Ciqc1F-zj1qAN-hzAACxn7OHrQI389.png\"\n                        alt=\"Lark20201117-165123.png\"\n                        data-nodeid=\"10468\"\n                      />\n                    </p>\n                    <h4 data-nodeid=\"10347\">2.乘法原理</h4>\n                    <p data-nodeid=\"10348\">\n                      如果将加法原理理解为是串行的逻辑，那么乘法原理就是个并行的逻辑。乘法原理可以理解为，某个事件的发生，依赖多个事件的同时发生。那么原事件发生的概率，就是所有这必须发生的多个事件的乘积。\n                    </p>\n                    <p data-nodeid=\"10349\">\n                      例如，你与大迷糊一起玩掷骰子的游戏，求大迷糊掷出 4\n                      点的同时，你最终获胜的概率是多少？\n                    </p>\n                    <p data-nodeid=\"10350\">\n                      这时候，计算的概率就必须两个条件同时发生。这两个条件分别是，大迷糊掷出\n                      4 点和你的点数大于\n                      4。根据前面的计算，我们知道掷骰子点数大于 4 的概率为\n                      1/3。因此，这两个条件发生概率的乘积就是最终的结果，即 P\n                      (大迷糊掷出 4 点的同时，你最终获胜) = 1/6×1/3 = 1/18 =\n                      0.0556。\n                    </p>\n                    <p data-nodeid=\"10351\">\n                      对于这个例子，我们可以用统计法进行仿真，代码如下：\n                    </p>\n                    <div class=\"course-code-area\">\n                      <div class=\"copy-btn\">\n                        <div class=\"copy-icon\"></div>\n                        复制代码\n                      </div>\n                      <pre><code data-language=\"python\"><ol><li><div class=\"code-word\"><span class=\"hljs-keyword\">import</span> random\n</div></li><li><div class=\"code-word\">obj = <span class=\"hljs-number\">0.0</span>\n</div></li><li><div class=\"code-word\"><span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">10000</span>):\t\n</div></li><li><div class=\"code-word\">\tyou = random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">6</span>)\n</div></li><li><div class=\"code-word\">\tdamihu = random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">6</span>)\n</div></li><li><div class=\"code-word\">\t<span class=\"hljs-keyword\">if</span> damihu == <span class=\"hljs-number\">4</span> <span class=\"hljs-keyword\">and</span> you &gt; damihu:\n</div></li><li><div class=\"code-word\">\t\tobj += <span class=\"hljs-number\">1</span>\n</div></li><li><div class=\"code-word\"><span class=\"hljs-keyword\">print</span> obj/<span class=\"hljs-number\">10000</span>\n</div></li></ol></code></pre>\n                    </div>\n                    <p data-nodeid=\"10353\">我们对代码进行走读：</p>\n                    <ul data-nodeid=\"10354\">\n                      <li data-nodeid=\"10355\">\n                        <p data-nodeid=\"10356\">\n                          第 3 行的 obj，就是最终事件发生的频次；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10357\">\n                        <p data-nodeid=\"10358\">\n                          我们对现象观察 10000 次，这样就形成了第 4～8 行的 for\n                          循环；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10359\">\n                        <p data-nodeid=\"10360\">\n                          每次循环，在第 5 和 6\n                          行，随机生成你的点数和大迷糊的点数；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10361\">\n                        <p data-nodeid=\"10362\">\n                          第 7 行进行判断，大迷糊为 4\n                          点且你的点数大于大迷糊的点数；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10363\">\n                        <p data-nodeid=\"10364\">\n                          如果满足条件，则在第 8 行执行 obj 加 1；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10365\">\n                        <p data-nodeid=\"10366\">最终，打印出 obj 除以 10000。</p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"10367\">\n                      这段代码运行的结果如下图，跟我们计算的结果几乎一致。<br />\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6E/C9/Ciqc1F-zj2iAQDXfAAIhj_Pzl0k278.png\"\n                        alt=\"Lark20201117-165125.png\"\n                        data-nodeid=\"10485\"\n                      />\n                    </p>\n                    <h3 data-nodeid=\"10368\">条件概率</h3>\n                    <p data-nodeid=\"10369\">\n                      刚刚的加乘法则，适用于独立事件的概率求解。独立事件的含义，就是上面所提到的原子事件。也就是，拆解出的子事件之间没有任何的先后或互相影响结果的因素。例如，大迷糊爱喝咖啡，和大漂亮爱穿高跟鞋，就是两个毫无关系的独立事件。对于独立事件，应用加乘法则可以很快得到整体的概率。\n                    </p>\n                    <p data-nodeid=\"10370\">\n                      那么，如果我们无法得到独立的事件，而都是耦合在一起的事件，又该如何计算概率呢？这就需要用到条件概率的知识了。\n                    </p>\n                    <p data-nodeid=\"14167\" class=\"te-preview-highlight\">\n                      <strong data-nodeid=\"14206\">条件概率</strong>，指事件 A\n                      在另外一个事件 B 已经发生条件下的发生概率，记作\n                      P(A|B)，读作“B 条件下 A 的概率”。条件概率的定义式为 P(A|B)\n                      = P(AB) / P(B)，将其变换一下就是 P(AB) = P(A|B) × P(B)。\n                    </p>\n\n                    <blockquote data-nodeid=\"10372\">\n                      <p data-nodeid=\"10373\">\n                        条件概率的特殊性，在于事件 A 和事件 B\n                        有千丝万缕的联系。如果二者为毫无关联的独立事件的话，事件\n                        A 的发生则与 B 毫无关系，则有 P(A|B) = P(A)。\n                      </p>\n                    </blockquote>\n                    <p data-nodeid=\"10374\">\n                      我们给一个例子辅助理解。假设有一对夫妻，他们有两个孩子。求他们在有女儿的条件下，两个孩子性别相同的概率是多少？\n                    </p>\n                    <p data-nodeid=\"10375\">\n                      这个概率看似难求，但只要定义好事件并套用定义式，就能完成计算。我们把事件\n                      B 定义为，这对夫妻有女儿，事件 A\n                      为两个孩子性别相同。因此，计算的目标就是\n                      P(A|B)，也就是计算 P(A|B) = P(AB) / P(B)。\n                    </p>\n                    <ul data-nodeid=\"10376\">\n                      <li data-nodeid=\"10377\">\n                        <p data-nodeid=\"10378\">\n                          事件 AB\n                          的含义是这对夫妻有女儿，且两个孩子性别相同。也就是说，这对夫妻的孩子都是女儿，即第一胎是女儿，第二胎还是女儿。此时根据乘法原理，得到\n                          P(AB) = (1/2)×(1/2) = 1/4。\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10379\">\n                        <p data-nodeid=\"10380\">\n                          事件 B\n                          为这对夫妻有女儿，不管第几胎，甚至是两胎都是女儿。这样就有了\n                          3\n                          种可能的情况：分别是第一胎女儿、第二胎儿子；第一胎儿子、第二胎女儿；第一胎女儿、第二胎女儿。这样根据加法原理和乘法原理，得到\n                          P(B) = (1/2)×(1/2)+(1/2)×(1/2)+(1/2)×(1/2) = 3/4。因此\n                          P(A|B) = P(AB) / P(B) = (1/4) / (3/4) = 1/3。\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"10381\">\n                      对于这个例子，我们用如下代码进行仿真：\n                    </p>\n                    <div class=\"course-code-area\">\n                      <div class=\"copy-btn\">\n                        <div class=\"copy-icon\"></div>\n                        复制代码\n                      </div>\n                      <pre><code data-language=\"python\"><ol><li><div class=\"code-word\"><span class=\"hljs-keyword\">import</span> random\n</div></li><li><div class=\"code-word\">fenzi = <span class=\"hljs-number\">0</span>\n</div></li><li><div class=\"code-word\">fenmu = <span class=\"hljs-number\">0</span>\n</div></li><li><div class=\"code-word\"><span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">1000</span>):\n</div></li><li><div class=\"code-word\">\t<span class=\"hljs-comment\">#0 is girl; 1 is boy</span>\n</div></li><li><div class=\"code-word\">\tfirst = random.randint(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>)\n</div></li><li><div class=\"code-word\">\tsecond = random.randint(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>)\n</div></li><li><div class=\"code-word\">\t<span class=\"hljs-keyword\">if</span> first == <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> second == <span class=\"hljs-number\">1</span>:\n</div></li><li><div class=\"code-word\">\t\t<span class=\"hljs-keyword\">continue</span>\n</div></li><li><div class=\"code-word\">\t<span class=\"hljs-keyword\">else</span>:\n</div></li><li><div class=\"code-word\">\t\tfenmu += <span class=\"hljs-number\">1</span>\n</div></li><li><div class=\"code-word\">\t\t<span class=\"hljs-keyword\">if</span> first == second:\n</div></li><li><div class=\"code-word\">\t\t\tfenzi += <span class=\"hljs-number\">1</span>\n</div></li><li><div class=\"code-word\"><span class=\"hljs-keyword\">print</span> <span class=\"hljs-number\">1.0</span>*fenzi/fenmu\n</div></li></ol></code></pre>\n                    </div>\n                    <p data-nodeid=\"10383\">我们对代码进行走读。</p>\n                    <ul data-nodeid=\"10384\">\n                      <li data-nodeid=\"10385\">\n                        <p data-nodeid=\"10386\">\n                          第 6 行开始，重复循环 1000 次。\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10387\">\n                        <p data-nodeid=\"10388\">\n                          第 8～9 行，随机生成两个孩子的性别。用 0 代表女儿，用\n                          1\n                          代表儿子。如果两个孩子都是儿子，则进行下一轮迭代。因为，这并不满足至少有一个女儿的假设条件。\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10389\">\n                        <p data-nodeid=\"10390\">\n                          第 12 行开始，如果有女儿，则分母加\n                          1，如果两个孩子的性别一致，则分子也加 1。\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10391\">\n                        <p data-nodeid=\"10392\">最终打印出分子和分母的比值。</p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"10393\">\n                      程序执行的效果如下图所示，结果与我们计算的近似相等：<br />\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6E/C9/Ciqc1F-zj3eAfosoAAIjh42fWgA084.png\"\n                        alt=\"Lark20201117-165128.png\"\n                        data-nodeid=\"10623\"\n                      /><br />\n                      当你遇到一个复杂事件的时候，一定要通过串行或并行的两重逻辑进行拆解。再基于加乘法则，利用每个原子粒度事件的概率，合成最终复杂事件发生的概率。\n                    </p>\n                    <p data-nodeid=\"10394\">接下来，我们看一些更复杂的问题。</p>\n                    <h3 data-nodeid=\"10395\">一个概率计算的案例</h3>\n                    <p data-nodeid=\"10396\">\n                      假设大漂亮在某电商公司，负责实时的红包券投放策略。大漂亮设计的投放策略是，如果用户在商品的详情页停留了\n                      1\n                      分钟以上，则认为该用户正在纠结是否购买此商品。此时，给用户实时投放一定金额的红包，来增加用户的购买可能性。\n                    </p>\n                    <p data-nodeid=\"10397\">\n                      试着分析一下，这里的事件之间的概率关系，以及投放红包到底产生了怎样的概率刺激效果？\n                    </p>\n                    <p data-nodeid=\"10398\">\n                      可以想象，用户购买某个商品的动作顺序是，点击商品详情页，再付款购买。很显然“点击详情页”和“付款购买”并不是独立的事件，原因在于不点击详情页是无法完成购买动作的，二者存在先后关系。因此\n                      <strong data-nodeid=\"10648\"\n                        >P(点击并购买) = P(购买|点击) × P(点击)</strong\n                      >，这个公式对所有的用户都生效。\n                    </p>\n                    <p data-nodeid=\"10399\">\n                      接下来，大漂亮的红包投放条件是，用户在商品的详情页停留了 1\n                      分钟以上。此时，产生购买行为的用户就有两部分，分别是使用红包的购买用户和未使用红包的购买用户。很显然，使用红包和不使用红包是两个并行的逻辑，可以采用加法原理进行概率计算，因此有\n                    </p>\n                    <p data-nodeid=\"10400\">\n                      <strong data-nodeid=\"10654\"\n                        >P(点击并购买) = P(点击并使用红包购买) +\n                        P(点击并未使用红包购买)</strong\n                      >。\n                    </p>\n                    <p data-nodeid=\"10401\">\n                      再分别拆解两部分概率，根据乘法原理和条件概率，则有\n                    </p>\n                    <p data-nodeid=\"10402\">\n                      <strong data-nodeid=\"10697\"\n                        >P(点击并购买) = P(购买|点击并获得红包) ×\n                        P(获得红包|点击) × P(点击) + P(购买|点击并未获得红包) ×\n                        P(未获得红包|点击) × P(点击)</strong\n                      >。\n                    </p>\n                    <p data-nodeid=\"10403\">\n                      假设策略上线后，大漂亮根据上线前后的数据，统计得到了每个环节的概率如下表所示：\n                    </p>\n                    <p data-nodeid=\"10404\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6E/D4/CgqCHl-zj4WAWvnJAAG9FsQTO-g751.png\"\n                        alt=\"Lark20201117-165130.png\"\n                        data-nodeid=\"10701\"\n                      />\n                    </p>\n                    <p data-nodeid=\"10405\">从表中数据可以发现以下几个结论：</p>\n                    <ul data-nodeid=\"10406\">\n                      <li data-nodeid=\"10407\">\n                        <p data-nodeid=\"10408\">\n                          投放红包是在点击之后，因此对点击率无影响；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10409\">\n                        <p data-nodeid=\"10410\">\n                          用户点击商品详情页的条件下，获得红包的概率是\n                          0.3，未获得红包的概率是 0.7；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10411\">\n                        <p data-nodeid=\"10412\">\n                          对于未获得红包的用户，其购买率与实验前一致，都是\n                          0.4。对于获得红包的用户，其购买率会上升，达到 0.5。\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"10413\">\n                      最终，根据公式计算下来，点击并购买的概率由 0.2 提升到了\n                      0.215，这就是红包投放的收益。\n                    </p>\n                    <h3 data-nodeid=\"10414\">小结</h3>\n                    <p data-nodeid=\"10415\">\n                      最后，我们对这一讲进行总结。概率的计算是高中和大学数学中有趣又让人头疼的内容，为了学好概率的知识，你不妨牢牢记住下面几个关键点。\n                    </p>\n                    <ul data-nodeid=\"10416\">\n                      <li data-nodeid=\"10417\">\n                        <p data-nodeid=\"10418\">\n                          概率来自统计。当你束手无策时，不妨从多次的重复试验中，统计目标事件出现的频次，来估算概率。\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10419\">\n                        <p data-nodeid=\"10420\">\n                          加乘法则是计算概率的有力手腕。对复杂事件按照并行或串行来拆解，再利用加乘法则就可以完成复杂事件的概率计算。\n                        </p>\n                      </li>\n                      <li data-nodeid=\"10421\">\n                        <p data-nodeid=\"10422\">\n                          条件概率是处理有关联事件的方法。虽然条件概率有些晦涩，但牢牢记住定义式\n                          P(A|B) = P(AB) /\n                          P(B)，就能让条件概率转换为普通事件的概率。在实际应用中，一定要耐着性子，仔细琢磨事件背后的相关关系，再利用这些方法，就能把概率计算清楚。\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"10423\" class=\"\">\n                      最后，我们给出一个思考题：一根绳子随机切成 3\n                      段，问能组成三角形的概率是多少？这个问题至少有 3\n                      种可行办法。我们会在后续的课程中公布答案，不妨先自己来试试看吧。\n                    </p>\n            "}