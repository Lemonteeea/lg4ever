{"title":"06 | 向量及其导数：计算机如何完成对海量高维度数据计算？","context":"\n                    <p data-nodeid=\"27937\" class=\"\">\n                      在上一课时，我们学习了利用梯度下降法求解函数的极值。我举了个例子，如果商品利润函数\n                      r 和补贴金额 x 的关系为 r(x) = p(x)×(m - x - c) =\n                      (2/(1+e-x) - 1)×(16 - x -\n                      8)，然后我又利用梯度下降法，求解出让利润最大的补贴额 x* 为\n                      2.42 元。\n                    </p>\n                    <p data-nodeid=\"27938\">\n                      就这个例题而言，其实根本不需要求导法或者是梯度下降法。这是因为，商品定价是\n                      8 元，补贴额 x 的<strong data-nodeid=\"28015\"\n                        >决策空间</strong\n                      >就是从不打折的 0 元到不要钱的 8\n                      元。如果最小颗粒度是“分”，那么决策空间就是\n                      0.00元～8.00元，这 801 个变量而已。写个 for\n                      循环，对每一个可能的补贴额都简单粗暴地计算一遍，也是一种简单可行的方法。\n                    </p>\n                    <p data-nodeid=\"27939\">\n                      然而，实际问题中可能会更加复杂。例如，购买概率除了与补贴额有关以外，还跟同行竞争对手的补贴额、商品的有效期、温度、天气、节假日等因素有关。假设有\n                      n 个可能的因素，每个因素的<strong data-nodeid=\"28029\"\n                        >决策空间</strong\n                      >都是 801 个，那么整体的<strong data-nodeid=\"28030\"\n                        >决策空间</strong\n                      >就瞬间变成了 801<sup>n</sup> 个！\n                    </p>\n                    <p data-nodeid=\"27940\">\n                      <strong data-nodeid=\"28034\"\n                        >此时再用简单粗暴的 for\n                        循环计算就变得不现实了，这也是在大数据环境下，数学算法对复杂业务环境求解计算的优势。</strong\n                      >\n                    </p>\n                    <h3 data-nodeid=\"27941\">向量是高维度数据的处理单元</h3>\n                    <p data-nodeid=\"27942\">\n                      我们提到，除了补贴额，影响商品购买率的因素还有很多。为了综合刻画这些因素对购买概率以及利润的影响，自然就需要用多元函数来表达，即\n                      r(x,y,z...) = r(补贴额，有效期，温度...)。\n                    </p>\n                    <ul data-nodeid=\"27943\">\n                      <li data-nodeid=\"27944\">\n                        <p data-nodeid=\"27945\">\n                          <strong data-nodeid=\"28040\">维度</strong>\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"27946\">\n                      每个影响购买概率的因素，又可称作<strong\n                        data-nodeid=\"28054\"\n                        >维度</strong\n                      >。当维度逐渐变多时，就意味着我们需要在<strong\n                        data-nodeid=\"28055\"\n                        >高维度数据空间</strong\n                      >下处理某个多元函数。在计算机或数学领域中，通常用<strong\n                        data-nodeid=\"28056\"\n                        >向量或矩阵</strong\n                      >来对高维度数据进行计算和表示。\n                    </p>\n                    <ul data-nodeid=\"27947\">\n                      <li data-nodeid=\"27948\">\n                        <p data-nodeid=\"27949\">\n                          <strong data-nodeid=\"28060\">向量</strong>\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"27950\">\n                      向量是高维度数据的表现形式，它由多个数字组合在一起，其中每个数字都是某个维度的特征值。通常印刷体用斜体、加粗的小写字母表示，例如\n                      <i><strong data-nodeid=\"28072\">a</strong></i\n                      >=[1,2,3,4,5]，而手写时在字母顶上加一小箭头“→”即可。\n                    </p>\n                    <ul data-nodeid=\"27951\">\n                      <li data-nodeid=\"27952\">\n                        <p data-nodeid=\"27953\">\n                          <strong data-nodeid=\"28076\">矩阵</strong>\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"27954\">\n                      既然向量是多个数字的组合，同样我们也可以<strong\n                        data-nodeid=\"28082\"\n                        >把多个向量组合在一起就得到了矩阵</strong\n                      >。矩阵通常用斜体、加粗的大写字母表示，例如：\n                    </p>\n                    <p data-nodeid=\"27955\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6C/06/Ciqc1F-qW2KAVC2eAAAqW3NSwxg911.png\"\n                        alt=\"图片1.png\"\n                        data-nodeid=\"28085\"\n                      />\n                    </p>\n                    <p data-nodeid=\"27956\">\n                      根据向量和矩阵的定义，不难发现向量是一种行数为 1 或列数为\n                      1\n                      的特殊矩阵。有了向量和矩阵，就能把高维度的数据用简单的数学符号表达了。\n                    </p>\n                    <h3 data-nodeid=\"27957\">矩阵的基本运算</h3>\n                    <p data-nodeid=\"27958\">\n                      因为向量是一种特殊的矩阵，矩阵的基本运算对于向量也适用。\n                    </p>\n                    <h4 data-nodeid=\"27959\">1.转置</h4>\n                    <p data-nodeid=\"27960\">\n                      先来介绍一下矩阵的转置。转置用大写字母 T\n                      作为上标来表示，作用是<strong data-nodeid=\"28095\"\n                        >交换矩阵行和列的值</strong\n                      >。这样原本的大小就由 n×m 变成 m×n 了，例如：\n                    </p>\n                    <p data-nodeid=\"27961\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6C/11/CgqCHl-qW22ATIEBAABmF6xQrH8325.png\"\n                        alt=\"图片2.png\"\n                        data-nodeid=\"28098\"\n                      />\n                    </p>\n                    <h4 data-nodeid=\"27962\">2.向量的点乘运算</h4>\n                    <p data-nodeid=\"27963\">\n                      点乘运算只适用于向量，用“·”表示。计算的结果为，两个向量所有对应项的<strong\n                        data-nodeid=\"28215\"\n                        >乘积之和</strong\n                      >。例如，向量 <i><strong data-nodeid=\"28216\">a</strong></i\n                      >= [a<sub>1</sub>,a<sub>2</sub>,...,a<sub>n</sub>] ,<i\n                        ><strong data-nodeid=\"28217\">b</strong></i\n                      >= [b<sub>1</sub>,b<sub>2</sub>,...,b<sub>n</sub>]，则<i\n                        ><strong data-nodeid=\"28218\">a</strong></i\n                      >·<i><strong data-nodeid=\"28219\">b</strong></i\n                      >=a<sub>1</sub>b<sub>1</sub>+a<sub>2</sub>b<sub>2</sub>+……+a<sub>n</sub>b<sub>n</sub>。例如\n                      <i><strong data-nodeid=\"28220\">a</strong></i\n                      >= [1,2,3] ,<i><strong data-nodeid=\"28221\">b</strong></i\n                      >= [2,3,4]，则\n                      <i><strong data-nodeid=\"28222\">a</strong></i\n                      >·<i><strong data-nodeid=\"28223\">b</strong></i\n                      >= 1×2 + 2×3 + 3×4 = 20。\n                    </p>\n                    <h4 data-nodeid=\"27964\">3.矩阵的乘积运算</h4>\n                    <p data-nodeid=\"27965\">\n                      接下来看一下矩阵相关的乘积运算。矩阵可以有两种乘积相关的运算，第一个是矩阵的乘法，第二个是哈达玛积。\n                    </p>\n                    <ul data-nodeid=\"27966\">\n                      <li data-nodeid=\"27967\">\n                        <p data-nodeid=\"27968\">\n                          <strong data-nodeid=\"28229\">运算矩阵的乘法</strong>\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"27969\">\n                      如果有 n×p 的矩阵\n                      <i><strong data-nodeid=\"28273\">A</strong></i> 和 p×m\n                      的矩阵 <i><strong data-nodeid=\"28274\">B</strong></i\n                      >，则矩阵<i><strong data-nodeid=\"28275\">A</strong></i> 和\n                      <i><strong data-nodeid=\"28276\">B</strong></i>\n                      可以做乘法运算。其乘积结果\n                      <i><strong data-nodeid=\"28277\">C</strong></i> =<i\n                        ><strong data-nodeid=\"28278\">AB</strong></i\n                      >\n                      的大小为 n×m，其中每个元素的数值为（<i\n                        ><strong data-nodeid=\"28279\">C</strong></i\n                      >\n                      矩阵中第 i 行第 j 列）\n                    </p>\n                    <p data-nodeid=\"27970\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6C/06/Ciqc1F-qW36AaufQAACCC2N6w4Y661.png\"\n                        alt=\"图片8.png\"\n                        data-nodeid=\"28282\"\n                      />\n                    </p>\n                    <p data-nodeid=\"27971\">\n                      需要注意的是，矩阵的乘法对维数有严格要求。<strong\n                        data-nodeid=\"28296\"\n                        >第一个矩阵的列数与第二个的行数必须相等</strong\n                      >。所以，<strong data-nodeid=\"28297\"\n                        >矩阵的乘法并不满足交换律</strong\n                      >。<br />\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6E/A4/CgqCHl-zPpaAdglhAACpwikeCDc307.png\"\n                        alt=\"WechatIMG846.png\"\n                        data-nodeid=\"28295\"\n                      />\n                    </p>\n                    <ul data-nodeid=\"27972\">\n                      <li data-nodeid=\"27973\">\n                        <p data-nodeid=\"27974\">\n                          <strong data-nodeid=\"28301\">哈达玛积</strong>\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"27975\">\n                      哈达玛积在对海量数据预处理中会被高频使用，它的计算方式相对简单很多。哈达玛积<strong\n                        data-nodeid=\"28307\"\n                        >要求两个矩阵的行列维数完全相同</strong\n                      >，计算方式是对应位置元素的乘积，例如：\n                    </p>\n                    <p data-nodeid=\"27976\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6C/11/CgqCHl-qW5CASFf5AAB7d4ZJSIo496.png\"\n                        alt=\"图片4.png\"\n                        data-nodeid=\"28310\"\n                      />\n                    </p>\n                    <h4 data-nodeid=\"27977\">4.求逆运算</h4>\n                    <p data-nodeid=\"27978\">\n                      最后一个矩阵的基本运算是求逆运算，这很像在标量里对一个数字求倒数。\n                    </p>\n                    <p data-nodeid=\"27979\">\n                      我们先来介绍一个特殊的矩阵——<strong data-nodeid=\"28324\"\n                        >单位矩阵</strong\n                      >。单位矩阵定义为主对角线元素为 1，其他元素为 0\n                      的方阵，用<i><strong data-nodeid=\"28325\">I</strong></i\n                      >来表示，例如：\n                    </p>\n                    <p data-nodeid=\"27980\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6C/06/Ciqc1F-qW5uAYSTVAAAmUORxc6w260.png\"\n                        alt=\"图片5.png\"\n                        data-nodeid=\"28328\"\n                      />\n                    </p>\n                    <p data-nodeid=\"27981\">\n                      求逆运算只可应用在方阵上，用 -1\n                      作为上标来表示，输出的结果也称作<strong\n                        data-nodeid=\"28352\"\n                        >逆矩阵</strong\n                      >。逆矩阵满足的性质是，与原矩阵做乘法运算后，结果为单位矩阵，即\n                      <em data-nodeid=\"28353\">A</em>×<em data-nodeid=\"28354\"\n                        >A</em\n                      ><sup>-1</sup>=<em data-nodeid=\"28355\">I。</em><br />\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6D/04/Ciqc1F-snJuADWmWAACZ999lC2A440.png\"\n                        alt=\"WechatIMG678.png\"\n                        data-nodeid=\"28351\"\n                      />\n                    </p>\n                    <h3 data-nodeid=\"27982\">向量的求导</h3>\n                    <p data-nodeid=\"27983\">\n                      前面说过，在对复杂业务问题进行形式化定义后，再求解最优值的过程中，不管是用求导法还是梯度下降法，都是逃不开要对目标函数进行求导的。复杂业务环境中，<strong\n                        data-nodeid=\"28361\"\n                        >自变量肯定不止一个，这就需要我们在向量或矩阵的环境中，掌握求导的运算。</strong\n                      >\n                    </p>\n                    <p data-nodeid=\"27984\">\n                      实际工作中，矩阵的求导用得非常少，掌握向量的求导就足够了。因此，我们重点学习“向量关于向量”的导数计算。\n                    </p>\n                    <p data-nodeid=\"27985\">\n                      我们先给出向量关于向量的导数的计算方法。向量\n                      <i><strong data-nodeid=\"28416\">y</strong></i> 关于向量\n                      <i><strong data-nodeid=\"28417\">w</strong></i>\n                      的求导结果是个矩阵，标记为<i\n                        ><strong data-nodeid=\"28418\">A</strong></i\n                      >。矩阵 <i><strong data-nodeid=\"28419\">A</strong></i> 中第\n                      i 行第 j 列的元素 a<sub>ij</sub>，为向量\n                      <i><strong data-nodeid=\"28420\">y</strong></i> 中第 i\n                      个元素关于向量\n                      <i><strong data-nodeid=\"28421\">w</strong></i> 中第 j\n                      个元素的导数。例如，如果向量\n                      <i><strong data-nodeid=\"28422\">w</strong></i> 的维数为\n                      n×1，向量\n                      <i><strong data-nodeid=\"28423\">y</strong></i> 的维数是\n                      m×1，则 y 关于 w 的求导结果矩阵维数就是 n×m，其中第 i 行第\n                      j 列的元素为：\n                    </p>\n                    <p data-nodeid=\"27986\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6C/06/Ciqc1F-qW6-AUmfJAAA_3qflnHM248.png\"\n                        alt=\"图片7.png\"\n                        data-nodeid=\"28426\"\n                      />\n                    </p>\n                    <p data-nodeid=\"27987\">\n                      此时，向量的求导就变成了标量的求导了，相信这并不会难倒我们。\n                    </p>\n                    <p data-nodeid=\"27988\">我们给出个相关例题：</p>\n                    <p data-nodeid=\"30277\" class=\"\">\n                      如果 <i><strong data-nodeid=\"30313\">w</strong></i\n                      ><sup>T</sup><i><strong data-nodeid=\"30314\">x</strong></i\n                      >= y，其中\n                      <i><strong data-nodeid=\"30315\">w</strong></i> 和\n                      <i><strong data-nodeid=\"30316\">x</strong></i> 都为 n×1\n                      的向量。显然这里的 y 是个标量，也就是一个 1×1\n                      的特殊向量。求 y 关于\n                      <i><strong data-nodeid=\"30317\">x</strong></i> 的导数。\n                    </p>\n                    <blockquote data-nodeid=\"55762\">\n                      <p data-nodeid=\"55763\" class=\"te-preview-highlight\">\n                        这里的 T 表示的是转置。此处\n                        <i><strong data-nodeid=\"55779\">w</strong></i\n                        ><sup>T</sup\n                        ><i><strong data-nodeid=\"55780\">x</strong></i>\n                        是矩阵乘法，1×n 和 n×1 才能相乘。另一种表示方法是\n                        w·x，表示向量点乘。此处二者结果一样。\n                      </p>\n                    </blockquote>\n\n                    <p data-nodeid=\"27990\">\n                      它的解析过程如下图所示：<br />\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/70/84/CgqCHl-7MuuANagGAAD83Oq_rRE087.png\"\n                        alt=\"WechatIMG931.png\"\n                        data-nodeid=\"28471\"\n                      />\n                    </p>\n                    <h3 data-nodeid=\"27991\">计算机处理海量数据</h3>\n                    <p data-nodeid=\"27992\">\n                      计算机在处理海量数据时，常常依赖复杂的数据结构进行存储。例如数组、链表、栈、哈希表、结构体等等。对于海量数据而言，一定要明确<strong\n                        data-nodeid=\"28478\"\n                        >样本和维度</strong\n                      >这两个概念：\n                    </p>\n                    <ul data-nodeid=\"27993\">\n                      <li data-nodeid=\"27994\">\n                        <p data-nodeid=\"27995\">\n                          样本，是指一条一条数据，代表的数据的个数；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"27996\">\n                        <p data-nodeid=\"27997\">\n                          维度，是指每一条样本的数据集合，代表数据特征的数量。\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"27998\">\n                      举个例子，全班 50\n                      名同学语文、数学、英语的考试成绩，就可以视作微型的海量数据。在这个数据集中，50\n                      个同学每个人都有自己的乘积，因此样本就是 50\n                      个。而每个同学的样本，又包含了数学成绩、语文成绩\n                      、英语成绩，这就是每个样本的 3 个维度，也可以称作 3\n                      个特征。这样，就可以得到维数为 50×3 的成绩矩阵。\n                    </p>\n                    <p data-nodeid=\"27999\">\n                      假设你需要对全班同学的成绩做一些统计计算，那向量的知识就突显出来了。通过向量的加减法，你可以计算出每个人的总分，也可以计算出全班同学每一门课的平均分；通过向量的点乘、哈达玛积，你可以计算出每个同学的偏科情况，即方差。\n                    </p>\n                    <p data-nodeid=\"28000\">\n                      有了这些基础知识，你就能应对大数据环境中数据的存储、处理、计算和应用了。\n                    </p>\n                    <h3 data-nodeid=\"28001\">小结</h3>\n                    <p data-nodeid=\"28002\">\n                      在实际工作中，你常会遇到高维度的数据，向量和矩阵就是必不可少的数学基础知识，计算机在处理海量数据时，就通常以向量或数组为单位。\n                    </p>\n                    <p data-nodeid=\"28003\">\n                      最后我们留一个作业：假设矩阵 50×3 的矩阵\n                      <i><strong data-nodeid=\"28493\">A</strong></i> 为全班 50\n                      个同学 3\n                      门课的考试成绩矩阵，用代码来实现每个同学的得分方差的计算，其中方差的公式为：\n                    </p>\n                    <p data-nodeid=\"28004\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image/M00/6C/07/Ciqc1F-qW8GAWfqFAABETcKbFZI117.png\"\n                        alt=\"图片10.png\"\n                        data-nodeid=\"28496\"\n                      />\n                    </p>\n                    <p data-nodeid=\"28005\">\n                      如果你用 Python 来开发，可能会用到 NumPy\n                      库，你也可以考虑用 MATLAB 来实现。\n                    </p>\n                    <p data-nodeid=\"28006\" class=\"\">\n                      关于向量的运算，还可以应用在对散点进行线性回归的拟合中，我们会在下一讲“07\n                      | 线性回归：如何在离散点中寻找数据规律？”中向你详细讲解。\n                    </p>\n            "}