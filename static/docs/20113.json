{"title":"加餐 | 模块二思考题解答","context":"\n                    <p data-nodeid=\"103492\">\n                      今天我会带你把《<strong data-nodeid=\"103542\"\n                        >模块二：网络层协议</strong\n                      >》中涉及的课后练习题，逐一讲解，并给出每个课时练习题的解题思路和答案。\n                    </p>\n                    <h3 data-nodeid=\"103493\">\n                      <a\n                        href=\"https://kaiwu.lagou.com/course/courseInfo.htm?courseId=837#/detail/pc?id=7271&amp;fileGuid=xxQTRXtVcqtHK6j8\"\n                        data-nodeid=\"103545\"\n                        >06 | IPv4 协议：路由和寻址的区别是什么？</a\n                      >\n                    </h3>\n                    <p data-nodeid=\"103494\">\n                      【<strong data-nodeid=\"103555\">问题</strong>】<strong\n                        data-nodeid=\"103556\"\n                        >下面这几个地址 127.0.0.1, localhost, 0.0.0.0\n                        有什么不同</strong\n                      >？\n                    </p>\n                    <p data-nodeid=\"103495\">\n                      【<strong data-nodeid=\"103564\">解析</strong>】<code\n                        data-backticks=\"1\"\n                        data-nodeid=\"103562\"\n                        >127.0.0.1</code\n                      >是本地回环地址（loopback），发送到 loopback\n                      的数据会被转发到本地应用。\n                    </p>\n                    <p data-nodeid=\"103496\">\n                      localhost 指代的是本地计算机，用于访问绑定在 loopback\n                      上的服务。localhost 是一个主机名，不仅仅可以指向 IPv4\n                      的本地回环地址，也可以指向 IPv6 的本地回环地址 [::1]。\n                    </p>\n                    <p data-nodeid=\"103497\">\n                      <code data-backticks=\"1\" data-nodeid=\"103570\"\n                        >0.0.0.0</code\n                      >是一个特殊目的 IP 地址，称作不可路由 IP\n                      地址，它的用途会被特殊规定。通常情况下，当我们把一个服务绑定到<code\n                        data-backticks=\"1\"\n                        data-nodeid=\"103572\"\n                        >0.0.0.0</code\n                      >，相当于把服务绑定到任意的 IP\n                      地址。比如一台服务器上有多个网卡，不同网卡连接不同的网络，如果服务绑定到\n                      0.0.0.0 就可以保证服务在多个 IP 地址上都可以用。\n                    </p>\n                    <h3 data-nodeid=\"103498\">\n                      <a\n                        href=\"https://kaiwu.lagou.com/course/courseInfo.htm?courseId=837#/detail/pc?id=7272&amp;fileGuid=xxQTRXtVcqtHK6j8\"\n                        data-nodeid=\"103576\"\n                        >07 | IPv6 协议：Tunnel 技术是什么？</a\n                      >\n                    </h3>\n                    <p data-nodeid=\"103499\">\n                      【<strong data-nodeid=\"103586\">问题</strong>】<strong\n                        data-nodeid=\"103587\"\n                        >请你总结下 IPv6 和 IPv4 究竟有哪些区别</strong\n                      >？\n                    </p>\n                    <p data-nodeid=\"103500\">\n                      【<strong data-nodeid=\"103597\">解析</strong>】I<strong\n                        data-nodeid=\"103598\"\n                        >Pv6 和 IPv4 最核心的区别是地址空间大小不同</strong\n                      >。IPv6 用 128 位地址，解决了 IP\n                      地址耗尽问题。因为地址空间大小不同，它们对地址的定义，对路由寻址策略都有显著的差异。\n                    </p>\n                    <p data-nodeid=\"103501\">\n                      <strong data-nodeid=\"103603\">在路由寻址策略上</strong\n                      >，IPv6\n                      消除了设备间地址冲突的问题，改变了划分子网的方式。在 IPv4\n                      网络中，一个局域网往往会共享一个公网 IP，因此需要 NAT\n                      协议和外网连接。\n                    </p>\n                    <p data-nodeid=\"103502\">\n                      <strong data-nodeid=\"103608\">在划分子网的时候</strong\n                      >，IPv4 地址少，需要子网掩码来处理划分子网。IPv6\n                      有充足的地址，因此不需要局域网共享外网 IP。也正因为 IPv6\n                      地址多，可以直接将 IPv6\n                      地址划分成站点、子网、设备，每个段都有充足的 IP 地址。\n                    </p>\n                    <p data-nodeid=\"103503\">\n                      因为 IPv6 支持的 IP 地址数量大大上升，一个子网可以有 2<sup\n                        >48</sup\n                      >\n                      个 IP 地址，这个子网可能是公司网络、家庭网络等。这样 IP\n                      地址的分配方式也发生了变化，IPv4 网络中设备分配 IP\n                      地址的方式是中心化的，由\n                      DHCP（动态主机协议）为局域网中的设备分配 IP 地址。而在\n                      IPv6 网络中，因为 IP\n                      地址很少发生冲突，可以由设备自己申请自己的 IP 地址。\n                    </p>\n                    <p data-nodeid=\"103504\">\n                      另外因为 IPv6\n                      中任何一个节点都可以是一个组播节点，这样就可以构造一个对等的网络，也就是可以支持在没有中心化的路由器，或者一个网络多个路由器的情况下工作。节点可以通过向周围节点类似打探消息的方式，发现更多的节点。这是一个配套\n                      IPv6 的能力，叫作邻居发现（ND）。\n                    </p>\n                    <h3 data-nodeid=\"103505\">\n                      <a\n                        href=\"https://kaiwu.lagou.com/course/courseInfo.htm?courseId=837#/detail/pc?id=7273&amp;fileGuid=xxQTRXtVcqtHK6j8\"\n                        data-nodeid=\"103617\"\n                        >08 | 局域网：网络地址转换是如何工作的？</a\n                      >\n                    </h3>\n                    <p data-nodeid=\"103506\">\n                      【<strong data-nodeid=\"103626\">问题</strong>】<strong\n                        data-nodeid=\"103627\"\n                        >IPv6 协议还需要 NAT 吗？</strong\n                      >\n                    </p>\n                    <p data-nodeid=\"103507\">\n                      【<strong data-nodeid=\"103633\">解析</strong>】IPv6 解决了\n                      IP 耗尽的问题，为机构、组织、公司、家庭等网络提供了充足的\n                      IP 资源，从这个角度看是不是就不需要 NAT 协议了呢？\n                    </p>\n                    <p data-nodeid=\"103508\">\n                      在没有 IPv6 之前，NAT 是 IP\n                      资源耗尽的主流解决方案。在一个内网中的全部设备通过 NAT\n                      协议共享一个外网的 IPv4\n                      地址，是目前内外网对接的主要方式。IPv6\n                      地址资源充足，可以给全球每个设备一个独立的地址。从这个角度看\n                      IPv6 的确不需要 NAT 协议。\n                    </p>\n                    <p data-nodeid=\"103509\">\n                      但是目前的情况，是 IPv6\n                      网络还没有完全普及。尽管很多公司已经支持自己的互联网产品可以使用\n                      IPv6 访问，但是公司内部员工使用的内部网络还是\n                      IPv4。如果要连接 IPv6 和 IPv4 网络，仍然需要 NAT\n                      协议（NAT64），这个协议可以让多个 IPv6 的设备共享一个 IPv4\n                      的公网地址。\n                    </p>\n                    <h3 data-nodeid=\"103510\">\n                      <a\n                        href=\"https://kaiwu.lagou.com/course/courseInfo.htm?courseId=837#/detail/pc?id=7274&amp;fileGuid=xxQTRXtVcqtHK6j8\"\n                        data-nodeid=\"103638\"\n                        >09 | TCP 实战：如何进行 TCP 抓包调试？</a\n                      >\n                    </h3>\n                    <p data-nodeid=\"103511\">\n                      <strong data-nodeid=\"103647\">【问题</strong>】<strong\n                        data-nodeid=\"103648\"\n                        >请你用自己最熟悉的语言，写一个 UDP 连接程序，然后用\n                        Wireshark 抓包</strong\n                      >。\n                    </p>\n                    <p data-nodeid=\"103512\">\n                      【<strong data-nodeid=\"103654\">解析</strong\n                      >】关于这个实战问题，我以 Java\n                      为例，写了一个回声服务（即客户端发送什么服务段返回什么），以下是服务端程序：\n                    </p>\n                    <div class=\"course-code-area\">\n                      <div class=\"copy-btn\">\n                        <div class=\"copy-icon\"></div>\n                        复制代码\n                      </div>\n                      <pre><code data-language=\"java\"><ol><li><div class=\"code-word\"><span class=\"hljs-keyword\">var</span> socket = <span class=\"hljs-keyword\">new</span> DatagramSocket(<span class=\"hljs-number\">8888</span>);\n</div></li><li><div class=\"code-word\"><span class=\"hljs-keyword\">var</span> buf = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">byte</span>[<span class=\"hljs-number\">256</span>];\n</div></li><li><div class=\"code-word\"><span class=\"hljs-keyword\">while</span> (<span class=\"hljs-keyword\">true</span>) {\n</div></li><li><div class=\"code-word\">&nbsp; &nbsp; DatagramPacket packet\n</div></li><li><div class=\"code-word\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = <span class=\"hljs-keyword\">new</span> DatagramPacket(buf, buf.length);\n</div></li><li><div class=\"code-word\">&nbsp; &nbsp; System.out.println(<span class=\"hljs-string\">\"try receive...\"</span>);\n</div></li><li><div class=\"code-word\">&nbsp; &nbsp; socket.receive(packet);\n</div></li><li><div class=\"code-word\">&nbsp; &nbsp; <span class=\"hljs-keyword\">var</span> address = packet.getAddress();\n</div></li><li><div class=\"code-word\">&nbsp; &nbsp; <span class=\"hljs-keyword\">int</span> port = packet.getPort();\n</div></li><li><div class=\"code-word\">&nbsp; &nbsp; packet = <span class=\"hljs-keyword\">new</span> DatagramPacket(buf, buf.length, address, port);\n</div></li><li><div class=\"code-word\">&nbsp; &nbsp; String received\n</div></li><li><div class=\"code-word\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = <span class=\"hljs-keyword\">new</span> String(packet.getData(), <span class=\"hljs-number\">0</span>, packet.getLength());\n</div></li><li><div class=\"code-word\">&nbsp; &nbsp; socket.send(packet);\n</div></li><li><div class=\"code-word\">}\n</div></li></ol></code></pre>\n                    </div>\n                    <p data-nodeid=\"103514\">以下是客户端程序：</p>\n                    <div class=\"course-code-area\">\n                      <div class=\"copy-btn\">\n                        <div class=\"copy-icon\"></div>\n                        复制代码\n                      </div>\n                      <pre><code data-language=\"java\"><ol><li><div class=\"code-word\">&nbsp; <span class=\"hljs-keyword\">var</span> buf = <span class=\"hljs-string\">\"Hello\"</span>.getBytes();\n</div></li><li><div class=\"code-word\">&nbsp; <span class=\"hljs-keyword\">var</span> socket = <span class=\"hljs-keyword\">new</span> DatagramSocket();\n</div></li><li><div class=\"code-word\">&nbsp; <span class=\"hljs-keyword\">var</span> address = InetAddress.getByName(<span class=\"hljs-string\">\"localhost\"</span>);\n</div></li><li><div class=\"code-word\">&nbsp; <span class=\"hljs-keyword\">var</span> packet\n</div></li><li><div class=\"code-word\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = <span class=\"hljs-keyword\">new</span> DatagramPacket(buf, buf.length, address, <span class=\"hljs-number\">8888</span>);\n</div></li><li><div class=\"code-word\">&nbsp; socket.send(packet);\n</div></li><li><div class=\"code-word\">&nbsp; socket.receive(packet);\n</div></li><li><div class=\"code-word\">&nbsp; String received = <span class=\"hljs-keyword\">new</span> String(\n</div></li><li><div class=\"code-word\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; packet.getData(), <span class=\"hljs-number\">0</span>, packet.getLength());\n</div></li><li><div class=\"code-word\">&nbsp; System.out.format(<span class=\"hljs-string\">\"Server echo : %s\\n\"</span>, received);\n</div></li></ol></code></pre>\n                    </div>\n                    <p data-nodeid=\"103516\">\n                      通过观察上面两段程序，你会发现发送和接收的都是<code\n                        data-backticks=\"1\"\n                        data-nodeid=\"103657\"\n                        >Datagram</code\n                      >报文。而且服务端和客户端之间不需要建立连接。服务端可以通过读取客户端的地址区分客户端，客户端通过服务端地址和端口发送数据到服务端。\n                    </p>\n                    <h4 data-nodeid=\"103517\">总结</h4>\n                    <p data-nodeid=\"103518\">\n                      这个模块我们围绕局域网和 IP 协议展开，包括\n                      ARP、IPv4、IPv6、NAT 等基本概念，探讨了 IPv6\n                      的工作原理，以及 IPv6 和 IPv4 的兼容策略。IP\n                      协议几乎是网络层的唯一协议，因此是大厂面试最为热门的内容之一。\n                    </p>\n                    <p data-nodeid=\"103519\">\n                      你可以通过以下几个维度去理解这部分知识：\n                    </p>\n                    <ol data-nodeid=\"103520\">\n                      <li data-nodeid=\"103521\">\n                        <p data-nodeid=\"103522\">\n                          最底层设备如何向设备发送信息（MAC 地址、路由器、ARP\n                          协议等）？\n                        </p>\n                      </li>\n                      <li data-nodeid=\"103523\">\n                        <p data-nodeid=\"103524\">\n                          小型局域网是怎样工作的（交换机和路由器）？\n                        </p>\n                      </li>\n                      <li data-nodeid=\"103525\">\n                        <p data-nodeid=\"103526\">中型局域网如何工作的？</p>\n                      </li>\n                      <li data-nodeid=\"103527\">\n                        <p data-nodeid=\"103528\">局域网如何对接外网（NAT）？</p>\n                      </li>\n                      <li data-nodeid=\"103529\">\n                        <p data-nodeid=\"103530\">\n                          互联网中如何定位设备和网络（IP\n                          协议的路由和寻址是如何工作的）？\n                        </p>\n                      </li>\n                    </ol>\n                    <p data-nodeid=\"103531\">\n                      通过上面这样的一个分层的总结，你可以逐层分析下自己是否已经理解了这个模块最核心的内容。这部分知识最大的价值在于平时在遇到网络问题时，可以找到一些思考方向。比如说为什么部分产品要解决\n                      NAT 穿透的问题？网吧的用户会遇到什么问题？为什么你 Ping\n                      不通同一个局域网的另一台机器？\n                    </p>\n                    <p data-nodeid=\"103532\">\n                      到这里，传输层协议和网络层协议就介绍完了，它们是计算机网络最底层的基础知识，建议你踏实学习，打好基础。\n                    </p>\n                    <p data-nodeid=\"103533\">\n                      发现求知的乐趣，我是林䭽，感谢你学习本次课程。\n                      接下来我们将进入《模块三：网络编程》的学习，下一讲介绍“10\n                      | Socket 编程：epoll 为什么用红黑树？”，再见！\n                    </p>\n            "}