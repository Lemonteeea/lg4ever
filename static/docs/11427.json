{"title":"结束语 |&nbsp;算法的精进之路","context":"\n                    <p data-nodeid=\"3\">\n                      专栏的最后一篇内容，我想和你聊聊天，讲一讲我平时如何磨炼自己的算法能力。我会从<strong\n                        data-nodeid=\"114\"\n                        >目标、方法、执行力</strong\n                      >这三个方面展开，和你分享我总结出的一些经验。但是没有一把万能的钥匙可以打开所有的门，所以你还需要根据自身的情况对“我的总结”做一些调整。\n                    </p>\n                    <h3 data-nodeid=\"4\">目标</h3>\n                    <p data-nodeid=\"5\">\n                      我有一个朋友在准备算法的时候，首先想到的是找到最牛逼的书，然后开始啃书，比如《算法导论》。其实，要做的第一件事，应该是确定目标。你可以思考一下：\n                    </p>\n                    <ul data-nodeid=\"6\">\n                      <li data-nodeid=\"7\">\n                        <p data-nodeid=\"8\">\n                          你的目标是能够流畅地通过一线大厂的算法面试吗？\n                        </p>\n                      </li>\n                      <li data-nodeid=\"9\">\n                        <p data-nodeid=\"10\">\n                          你的目标是要去参加一些算法竞赛吗？\n                        </p>\n                      </li>\n                      <li data-nodeid=\"11\">\n                        <p data-nodeid=\"12\">\n                          你的目标是要成为算法领域的大牛吗？\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"13\">\n                      这里面，每一个目标需要花费的精力、制定的路线都不同。如果你要参加算法竞赛，那么需要掌握的数据结构/算法要<strong\n                        data-nodeid=\"125\"\n                        >多得多</strong\n                      >，而多出来的这部分知识只有极低的概率会出现在大厂的算法面试中（比如数论算法）。\n                    </p>\n                    <p data-nodeid=\"14\">\n                      我想，阅读这个专栏的同学，大多数制定的目标应该是通过大厂的算法面试。所以这里我们暂且将目标定为<strong\n                        data-nodeid=\"135\"\n                        >通过面试</strong\n                      >。如果你在刷题或者看书的时候，看到一些超纲的知识点，其实可以降低优先级，跳过它。那么哪些知识点是超纲的呢？我在学习算法前，会有针对性地罗列一下大厂面试中高频出现的<strong\n                        data-nodeid=\"136\"\n                        >知识点</strong\n                      >，如下图所示：\n                    </p>\n                    <p data-nodeid=\"1383\" class=\"\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image6/M00/40/E0/CioPOWCna7yAbR5gAABloprC1Ew727.png\"\n                        alt=\"Drawing 0.png\"\n                        data-nodeid=\"1386\"\n                      />\n                    </p>\n\n                    <p data-nodeid=\"16\">\n                      在后面看书、刷题的时候，99%\n                      的精力会花在这些知识点上，暂且不去理会超纲的题目。而只有这些知识点都烂熟于心之后，再去学习一些超纲的知识点。\n                    </p>\n                    <h3 data-nodeid=\"17\">学习方法</h3>\n                    <p data-nodeid=\"18\">\n                      每个人的基本情况不同，那么这里，我会从基础能力由弱到强说起。你可以根据自身能力跳过某些阶段。\n                    </p>\n                    <h4 data-nodeid=\"19\">基础扫盲</h4>\n                    <p data-nodeid=\"20\">\n                      如果你以前的专业不是计算机，或者你以前并没有接触过算法与数据结构。你首先需要做\n                      1 件事情：\n                    </p>\n                    <ul data-nodeid=\"21\">\n                      <li data-nodeid=\"22\">\n                        <p data-nodeid=\"23\">\n                          拿一本<strong data-nodeid=\"152\">基础入门</strong\n                          >的书/专栏，把基础的知识点都过<strong\n                            data-nodeid=\"153\"\n                            >一遍</strong\n                          >。\n                        </p>\n                      </li>\n                    </ul>\n                    <blockquote data-nodeid=\"24\">\n                      <p data-nodeid=\"25\">\n                        这个阶段不建议看《算法导论》《计算机程序设计艺术》等大部头的书。我一般是挑一本比简单的书或者某个网课/专栏把这个阶段尽快过掉。\n                      </p>\n                    </blockquote>\n                    <p data-nodeid=\"1939\" class=\"\">\n                      这个阶段看书要达到的效果是：要知道各种基础概念（比如\n                      DFS/BFS/回溯等）、各种基础数据结构（二叉树/链表/哈希等）、基础算法名词（贪心/DP\n                      等），都要弄明白说的是什么。<strong data-nodeid=\"1945\"\n                        >这一阶段，你不需要达到能够写出各种代码的程度，只需要看懂书上的代码，会用笔通过画画的方式，来解决数据结构和算法的某个具体的输入。</strong\n                      >\n                      比如：\n                    </p>\n\n                    <ul data-nodeid=\"27\">\n                      <li data-nodeid=\"28\">\n                        <p data-nodeid=\"29\">\n                          当给定有序数组 A[] = {1,2,3,4,9} 的时候，你能<strong\n                            data-nodeid=\"168\"\n                            >用笔</strong\n                          >写出二分搜索的流程。\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"30\">\n                      接着做<strong data-nodeid=\"174\">第 2 件事情</strong>：\n                    </p>\n                    <ul data-nodeid=\"31\">\n                      <li data-nodeid=\"32\">\n                        <p data-nodeid=\"33\">\n                          重新打开书，按照<strong data-nodeid=\"184\"\n                            >知识点的顺序</strong\n                          >，打开你喜欢的刷题网站，每个知识点<strong\n                            data-nodeid=\"185\"\n                            >先刷 10 道左右简单题</strong\n                          >。\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"34\">\n                      这个阶段花费的时间，根据个人情况，一般 1\n                      个月左右。此外，你的目的是过掉各种基础知识点，所以不需要看很多书。\n                    </p>\n                    <h4 data-nodeid=\"35\">刷题阶段</h4>\n                    <p data-nodeid=\"36\">先说一个简单的结论：跟着本专栏走！</p>\n                    <p data-nodeid=\"37\">\n                      因为当基础知识扫盲之后，接下来就需要通过实践来提升我们的算法能力。在刷题阶段，我们的目标是击破中等难度的题目。\n                    </p>\n                    <p data-nodeid=\"38\">\n                      <strong data-nodeid=\"193\">阶段 1：一解多题</strong>\n                    </p>\n                    <p data-nodeid=\"39\">\n                      这一阶段是以知识点为出发点，我们需要按照以下方式来刷题。\n                    </p>\n                    <ul data-nodeid=\"40\">\n                      <li data-nodeid=\"41\">\n                        <p data-nodeid=\"42\">\n                          高频出现的知识点作为 Tag，只刷这个 Tag\n                          中等难度的题目！\n                        </p>\n                      </li>\n                      <li data-nodeid=\"43\">\n                        <p data-nodeid=\"44\">\n                          看题解！无论一个题是否 Resolve，一定要看题解！\n                        </p>\n                      </li>\n                      <li data-nodeid=\"45\">\n                        <p data-nodeid=\"46\">\n                          抓住数据结构与算法的特点！形成一解多题的能力。<strong\n                            data-nodeid=\"202\"\n                            >整理</strong\n                          >代码模板！\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"47\">\n                      你会发现，这正是我们专栏《模块一：数据结构之一解多题篇》介绍的内容。这个阶段的产出，就\n                      3 个字“<strong data-nodeid=\"208\">写得出</strong\n                      >”。比如当我直白地告诉你需要用\n                      DFS/回溯/二分的时候，你能快速地把相应的代码写出来。\n                    </p>\n                    <blockquote data-nodeid=\"48\">\n                      <p data-nodeid=\"49\">\n                        注意：这一阶段不要按照刷题网站的顺序，按照题号来刷题，这样做效率非常低！\n                      </p>\n                    </blockquote>\n                    <p data-nodeid=\"50\">\n                      此外，整理好的代码模板还需要用起来。所以，这里我再讲一下如何将代码模板放到\n                      Vscode 中，方便你在后面的写题中加快刷题的速度（<a\n                        href=\"https://snippet-generator.app/?fileGuid=xxQTRXtVcqtHK6j8\"\n                        data-nodeid=\"213\"\n                        >制作代码模板的网站</a\n                      >）。\n                    </p>\n                    <p data-nodeid=\"2500\" class=\"\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image6/M00/40/E0/CioPOWCna86AIKUTAAKcKMDNif0795.png\"\n                        alt=\"Drawing 1.png\"\n                        data-nodeid=\"2503\"\n                      />\n                    </p>\n\n                    <p data-nodeid=\"52\">Step 1. 输入模板关键字和描述。</p>\n                    <p data-nodeid=\"3062\" class=\"\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image6/M01/40/D8/Cgp9HWCna9aAE5V-AAJfqe14csQ341.png\"\n                        alt=\"Drawing 2.png\"\n                        data-nodeid=\"3065\"\n                      />\n                    </p>\n\n                    <p data-nodeid=\"54\">Step 2. 放上并查集的模板代码。</p>\n                    <p data-nodeid=\"3628\" class=\"\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image6/M00/40/E0/CioPOWCna92AOE9BAAX3NcmR8bY969.png\"\n                        alt=\"Drawing 3.png\"\n                        data-nodeid=\"3631\"\n                      />\n                    </p>\n\n                    <p data-nodeid=\"56\">\n                      Step 3. 复制整个 json 格式的代码模板。\n                    </p>\n                    <p data-nodeid=\"4198\" class=\"\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image6/M00/40/E0/CioPOWCna-SAQvgEAATDO0xeDlg700.png\"\n                        alt=\"Drawing 4.png\"\n                        data-nodeid=\"4201\"\n                      />\n                    </p>\n\n                    <p data-nodeid=\"58\">\n                      Step 4. 打开 Vscode，找到 User Snippets。\n                    </p>\n                    <p data-nodeid=\"4772\" class=\"\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image6/M01/40/D8/Cgp9HWCna-mAV2VqAACacHgsh5E729.png\"\n                        alt=\"Drawing 5.png\"\n                        data-nodeid=\"4775\"\n                      />\n                    </p>\n\n                    <p data-nodeid=\"60\">\n                      Step 5. 选中代码模板要放到哪个文件中，比如放到 global\n                      中。<strong data-nodeid=\"229\"\n                        >注意，Vscode 中这个文件的格式一定要满足 json\n                        格式</strong\n                      >。\n                    </p>\n                    <p data-nodeid=\"61\">\n                      至此，代码模板就成功添加到了编辑器中，在刷题的时候，都可以用上它。\n                    </p>\n                    <p data-nodeid=\"5350\" class=\"\">\n                      <img\n                        src=\"https://s0.lgstatic.com/i/image6/M00/40/E0/CioPOWCna_CAV0LiAAIg8AyGcA4899.png\"\n                        alt=\"Drawing 6.png\"\n                        data-nodeid=\"5353\"\n                      />\n                    </p>\n\n                    <p data-nodeid=\"63\">\n                      Step 6.\n                      输入我们的模板关键字，再回车，一份完整的并查集模板代码就可以直接使用了。\n                    </p>\n                    <blockquote data-nodeid=\"6513\">\n                      <p data-nodeid=\"6514\">\n                        注意：不要小看添加模板和使用模板的小妙招。我曾经用这个绝招，10\n                        个小时刷完了所有的二叉树的题目！\n                      </p>\n                      <p data-nodeid=\"6515\" class=\"te-preview-highlight\">\n                        我们是在学习算法，不是在练习打字。所以一些固定的代码模板，没有必要重复地敲来敲去，以及浪费时间在一些低级的\n                        Bug 调试。\n                      </p>\n                    </blockquote>\n\n                    <p data-nodeid=\"68\">\n                      <strong data-nodeid=\"238\">阶段 2：一题多解</strong>\n                    </p>\n                    <p data-nodeid=\"69\">\n                      这一阶段是以<strong data-nodeid=\"244\">解题</strong\n                      >为核心，你需要回顾一遍刷过的题，这里我给你划了有三个重点：\n                    </p>\n                    <ul data-nodeid=\"70\">\n                      <li data-nodeid=\"71\">\n                        <p data-nodeid=\"72\">每个题尽量需要做到有多种解法；</p>\n                      </li>\n                      <li data-nodeid=\"73\">\n                        <p data-nodeid=\"74\">\n                          找到不同的题目之间的联系、差异、变化规律；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"75\">\n                        <p data-nodeid=\"76\">\n                          重点关照没思路的题、经常写错的题、有多种解法的题。\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"77\">\n                      这一阶段的产出就 3 个字——<strong data-nodeid=\"253\"\n                        >有思路</strong\n                      >。具体来说，就是看到题目能够辨别出题目的考点，能够联想到我们的算法与数据结构，然后快速想到解题思路。\n                    </p>\n                    <blockquote data-nodeid=\"78\">\n                      <p data-nodeid=\"79\">\n                        注意：这一阶段不是去突击困难的题，而是要保证拿到中等难度的题要有思路。\n                      </p>\n                    </blockquote>\n                    <p data-nodeid=\"80\">\n                      所以你在刷题的时候，要快速利用你之前整理好的代码模板。比如我会将阶段\n                      1 整理好的代码模板放到 Vscode\n                      编辑器中。写题的时候就可以一键写好我的代码。刷题速度快到飞起！\n                    </p>\n                    <h4 data-nodeid=\"81\">面试准备</h4>\n                    <p data-nodeid=\"82\">\n                      如果你的目标是面试，那么在面试前，就只需要做两件事：\n                    </p>\n                    <ul data-nodeid=\"83\">\n                      <li data-nodeid=\"84\">\n                        <p data-nodeid=\"85\">\n                          复习整理好的代码模板，把这些代码模板写熟练，能背着打出来最好；\n                        </p>\n                      </li>\n                      <li data-nodeid=\"86\">\n                        <p data-nodeid=\"87\">\n                          复习不容易形成思路的题目，利用碎片化时间不停抽查这些题目。\n                        </p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"88\">\n                      准备面试阶段，我们在写题时，一定要计时！人为加一点心理压力，对面试有非常好的帮助。\n                    </p>\n                    <h4 data-nodeid=\"89\">超越自我</h4>\n                    <p data-nodeid=\"90\">\n                      如果你还想更进一步提升自己的能力，那么可以跳出舒适区，积极地参加一些算法竞赛。与更多的选手、大佬们交流，并且积极地写题解帮助更多的朋友。有时候，“以赛代练”能够更加有效地提升你的算法能力。你需要做到：\n                    </p>\n                    <ul data-nodeid=\"91\">\n                      <li data-nodeid=\"92\">\n                        <p data-nodeid=\"93\">不要在意排名</p>\n                      </li>\n                      <li data-nodeid=\"94\">\n                        <p data-nodeid=\"95\">\n                          比赛做不出来没关系，赛后一定要补题\n                        </p>\n                      </li>\n                      <li data-nodeid=\"96\">\n                        <p data-nodeid=\"97\">写题解</p>\n                      </li>\n                      <li data-nodeid=\"98\">\n                        <p data-nodeid=\"99\">看别人的题解</p>\n                      </li>\n                    </ul>\n                    <p data-nodeid=\"100\">\n                      有了以上几步，相信你的算法能力会迅速提高。\n                    </p>\n                    <h3 data-nodeid=\"101\">执行力</h3>\n                    <p data-nodeid=\"102\">\n                      以上就是我针对自身情况，以及分享给我身边的朋友们的学习方法。至少就突破面试而言，已经够用了。\n                    </p>\n                    <p data-nodeid=\"103\">\n                      不过，算法是一门实践性非常强的学科。当你有了这么一份好的计划，那么接下来你要做的事情就是：执行它！坚决地执行它！\n                    </p>\n                    <h3 data-nodeid=\"104\">总结</h3>\n                    <p data-nodeid=\"105\">\n                      这就是我学习算法的过程与方法。看到这里，希望你能够根据这个方法制定出适合自己的方法和计划，并且<strong\n                        data-nodeid=\"277\"\n                        >一定要执行到位</strong\n                      >。\n                    </p>\n                    <p data-nodeid=\"106\">\n                      如果你有什么更好的方法、建议，欢迎写在留言区，我们一起讨论。再见。\n                    </p>\n            "}